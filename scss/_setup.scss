@import url('https://fonts.googleapis.com/css?family=Neuton:200,300,400,700');

$black	: #101010;
$white	: #ffffff;

@mixin grad($colourOne, $colourTwo) {
	background: $colourOne;
	background: -moz-linear-gradient(top, $colourOne 0%, $colourTwo 100%);
	background: -webkit-linear-gradient(top, $colourOne 0%,$colourTwo 100%);
	background: linear-gradient(to bottom, $colourOne 0%,$colourTwo 100%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$colourOne', endColorstr='$colourTwo',GradientType=0 );
}

@mixin prefix($property, $value) {
	-webkit-#{$property}: $value;
	   -moz-#{$property}: $value;
	    -ms-#{$property}: $value;
		 -o-#{$property}: $value;
		 	#{$property}: $value;
}

@mixin breakpoint($size) {
	@media only screen and (max-width: $size) {
		@content;
	}
}

@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
		@content;
	}
	@-moz-keyframes #{$name} {
		@content;
	}
	@-o-keyframes #{$name} {
		@content;
	}
	@keyframes #{$name} {
		@content;
	}
}

@mixin animationPrefix($value...) {
	-webkit-animation: $value;
	   -moz-animation: $value;
		 -o-animation: $value;
		 	animation: $value;
}

@mixin easing($prop, $time) {
	-webkit-transition: $prop $time cubic-bezier(1.000, 0.000, 0.000, 1.000);
	   -moz-transition: $prop $time cubic-bezier(1.000, 0.000, 0.000, 1.000);
	     -o-transition: $prop $time cubic-bezier(1.000, 0.000, 0.000, 1.000);
	        transition: $prop $time cubic-bezier(1.000, 0.000, 0.000, 1.000);
	
	-webkit-transition-timing-function: cubic-bezier(1.000, 0.000, 0.000, 1.000);
	   -moz-transition-timing-function: cubic-bezier(1.000, 0.000, 0.000, 1.000);
	     -o-transition-timing-function: cubic-bezier(1.000, 0.000, 0.000, 1.000);
	        transition-timing-function: cubic-bezier(1.000, 0.000, 0.000, 1.000);
}

@mixin playAnim($name, $time, $delay, $easing, $direction) {
	animation-name: $name;
	animation-duration: $time;
	animation-delay: $delay;
	animation-timing-function: $easing;
	animation-fill-mode: $direction;
}

@include keyframes(introAnimIn) {
	from {
		top: 40px;
		opacity: 0;
		@include prefix(filter, blur(25px));
	}
	to {
		top: 0px;
		opacity: 1;
		@include prefix(filter, blur(0px));
	}
}

@include keyframes(introAnimOut) {
	from {
		top: 0px;
		opacity: 1;
		@include prefix(filter, blur(0px));
	}
	to {
		top: -40px;
		opacity: 0;
		@include prefix(filter, blur(25px));
	}
}

@include keyframes(AimOut) {
	from {
		left: 0px;
		opacity: 1;
		@include prefix(filter, blur(0px));
	}
	to {
		left: 50px;
		opacity: 0;
		@include prefix(filter, blur(25px));
	}
}

@include keyframes(pathAnim) {
	from {
		stroke-dasharray: 900;
		stroke-dashoffset: 1200;
	}
	to {
		stroke-dasharray: 600;
		stroke-dashoffset: 1200;
	}
}

@include keyframes(logoPopOut) {
	from {
		left: -50px;
		opacity: 1;
	}
	to {
		left: 0px;
		opacity: 0;
	}
}

@include keyframes(logoPopIn) {
	from {
		left: -50px;
		opacity: 0;
	}
	to {
		left: 0px;
		opacity: 1;
	}
}

@include keyframes(bgPop) {
	from {
		background-color: rgba($white, 0.75);
	}
	to {
		background-color: rgba($black, 0.75);
	}
}

@include keyframes(hashtag) {
	from {
		top: 50%;
		left: 50%;
		opacity: 0;
	}
	to {
		top: 25%;
		left: 50%;
		opacity: 1;
	}
}

@mixin navIntro($name, $top, $left) {
	@-webkit-keyframes #{$name} {
		0% {
			top: 50%;
			left: 50%;
			opacity: 0;
		}
		50% {
			opacity: 0;
		}
		100% {
			top: $top;
			left: $left;
			opacity: 1;
		}
	}
	@-moz-keyframes #{$name} {
		0% {
			top: 50%;
			left: 50%;
			opacity: 0;
		}
		50% {
			opacity: 0;
		}
		100% {
			top: $top;
			left: $left;
			opacity: 1;
		}
	}
	@-o-keyframes #{$name} {
		0% {
			top: 50%;
			left: 50%;
			opacity: 0;
		}
		50% {
			opacity: 0;
		}
		100% {
			top: $top;
			left: $left;
			opacity: 1;
		}
	}
	@keyframes #{$name} {
		0% {
			top: 50%;
			left: 50%;
			opacity: 0;
		}
		50% {
			opacity: 0;
		}
		100% {
			top: $top;
			left: $left;
			opacity: 1;
		}
	}
}

@include keyframes(transition) {
	0% {
		transform: translateY(-50%) translateX(-2%);
	}
	100% {
		transform: translateY(-50%) translateX(-98%);
	}
}

@include keyframes(transitionOut) {
	0% {
		transform: translateY(-50%) translateX(-98%);
	}
	100% {
		transform: translateY(-50%) translateX(-2%);
	}
}

@mixin textGlitch($name, $intensity, $textColor, $background, $highlightColor1, $highlightColor2, $width, $height) {
	color: $textColor;
	position: relative;
	$steps: $intensity;

	@at-root {
		@for $i from 1 through 2 {
			@keyframes #{$name}-anim-#{$i} {
				@for $i from 0 through $steps {
					#{percentage($i*(1/$steps))} {
						clip: rect(
							random($height)+px,
							$width+px,
							random($height)+px,
							0
						);
					}
				}
			}
		}
	}

	&:before,
	&:after {
		content: attr(data-text);
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: $background;
		clip: rect(0, 0, 0, 0); 
	}
	
	&:after {
		left: 2px;
		text-shadow: -1px 0 $highlightColor1;
		animation: #{$name}-anim-1 2s infinite linear alternate-reverse;
	}
	
	&:before {
		left: -2px;
		text-shadow: 2px 0 $highlightColor2; 
		animation: #{$name}-anim-2 3s infinite linear alternate-reverse;
	}

}